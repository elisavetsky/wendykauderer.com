---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

// get art type background
const artwork = await getCollection("artwork");

function getLatestOfArtType(artType, property) {
   const allPaintings = artwork.filter((entry) => entry.data.art_type === artType)
      .sort((a, b) => Date.parse(b.data.date) - Date.parse(a.data.date));
   
   // if nothing found, throw error
   if (allPaintings.length) {
      // return specified property by bracket syntax
      const output = allPaintings[0].data.images[0][property];

      if (output) {
         console.log("output", output)
         return output;
      } else {
         throw new Error(`No property named "${artType}" found for "${artType}" art type`);
      }
   } else {
      console.warn(`No entries found for the specified art type: "${artType}"`);

      // return null if nothing is found so that app doesn't crash
      return null;
   }   
}

getLatestOfArtType("painting", "image")

// art types array
const artTypes = [
   { 
      route: "painting", 
      label: "Paintings", 
      image: getLatestOfArtType("painting", "image"), 
      image_alt: getLatestOfArtType("painting", "image_alt") 
   },
   { 
      route: "drawing", 
      label: "Drawings",
      image: getLatestOfArtType("drawing", "image"), 
      image_alt: getLatestOfArtType("drawing", "image_alt") 
   },
   { 
      route: "sculpture", 
      label: "Sculptures",
      image: getLatestOfArtType("sculpture", "image"), 
      image_alt: getLatestOfArtType("sculpture", "image_alt")
   }
]

const props = Astro.props;
---

<menu class="flex items-center p-4 overflow-x-scroll font-sans text-slate-950 text-sm font-semibold dark:text-slate-50">
   {
      artTypes.map(({route, label, image, image_alt}) => {
         return (
            <a href={`${route}`} class="relative shrink-0 w-32 h-32 mr-4 mb-4 rounded-full">
               <li class="absolute z-10 shadow-lg backdrop-blur-md backdrop-saturate-200 flex justify-center items-center bg-white/60 w-full h-full rounded-full p-1 transition-all duration-300 hover:translate-x-1 hover:-translate-y-1 hover:shadow-xl hover:backdrop-blur-lg hover:bg-slate-50/60 dark:shadow-slate-800 dark:bg-slate-950/50 dark:hover:bg-slate-950/50">
                  <span class="drop-shadow-white dark:drop-shadow-sm">{label}</span>
               </li>
               {
                  image && image_alt &&
                  <Image
                     src={image}
                     alt={image_alt}
                     quality={1}
                     width={100}
                     class="w-full h-full object-cover rounded-full"
                  />
               }
               
            </a>
         )
      })
   }
   
</menu>