---
// Import packages
import slugify from '@sindresorhus/slugify';

// Expose site configuration for CMS
import { frontmatter } from "../configuration/SitewideConfig.md";
const sections = frontmatter.sections;

// import components
import Dropdown from './Dropdown.jsx';
import ThemeToggle from './ThemeToggle.jsx';
import Link from './Link.jsx';
import ArtTypes from './ArtTypes.astro';
---

<nav aria-label="Main menu" id="main-menu" class="hidden text-md mt-8 pb-5 md:translate-y-0 md:m-0 md:flex md:flex-col">
   <ul class="flex flex-col justify-between leading-loose mb-4 w-full md:gap-1 md:mb-8 md:mr-12">
      
      {sections?.map(({title, dropdown_items}) => {
         return (
            <li class={`${dropdown_items ? "dropdown-container" : "" } inline-flex flex-col items-start relative w-fit`}>
               
               {dropdown_items ?
               <button 
                  class={`dropdown-trigger py-1 px-4 transition-colors hover:text-slate-800 dark:hover:text-slate-100`}
               >
                  {title}
               </button>
               <ul class={`dropdown-menu ${Astro.url.pathname.split("/")[1] === slugify(title) ? "hidden" : ""} transition-colors relative z-10 left-0 rounded-lg bottom-0 w-full py-2  md:left-[unset]`}>
                  <ArtTypes />
               </ul>
               // <Dropdown items={dropdown_items} />
               :
               <Link
                  href={`/${slugify(title)}`}
                  size="md"
                  transition="transition"
                  classes={
                     `${Astro.url.pathname.split("/")[1] === slugify(title) ? "underline underline-offset-4 decoration-2 decoration-inherit" : "decoration-transparent"} decoration-2 hover:decoration-inherit motion-safe:hover:translate-x-px motion-safe:hover:-translate-y-px hover:underline hover:underline-offset-4 hover:text-slate-500 dark:hover:text-slate-200`
                  }
               >
                  {title}
               </Link>
               }
               
            </li>
         )
      })}
      
   </ul>
   <ThemeToggle client:load />
</nav>

<script>
   const dropTriggers = document.querySelectorAll(".dropdown-trigger");
   const dropMenus = document.querySelectorAll(".dropdown-menu");

   function handleClick(el) {
      const button = el.currentTarget;
      
      const dropMenu = button.closest(".dropdown-container").querySelector(".dropdown-menu");
      
      // toggle 'hidden' class for dropMenu
      dropMenu.classList.toggle("hidden");
   }

   function handleClickOutside(el) {
      clickedEl = el.currentTarget
   }

   dropTriggers.forEach((dropTrigger) => {
      dropTrigger.addEventListener("click", handleClick);
   })

   dropMenus.forEach((dropMenu) => {
      dropMenu.addEventListener("blur", (e) => {
         dropMenu.classList.add("hidden");
      })
   })
</script>