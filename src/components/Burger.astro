---
---

<button aria-label="Main menu button" data-target="main-menu" class="burger z-50 flex items-center h-fit relative cursor-pointer rounded-b-lg rounded-t-sm transition-all hover:bg-gray-200 hover:shadow-md dark:hover:bg-zinc-700 dark:hover:shadow-black/70 md:hidden">
   <span class="patties w-12 h-10"></span>
</button>


<script>
   document.addEventListener('astro:page-load', () => {
   // This necessary script runs after very page load

      // Navbar burger elements
      const burgerMenus = document.querySelectorAll(".burger");

      function handleClick(el) {
         const button = el.currentTarget;

         // make menu active
         const target = button.dataset.target;
         const targetEl = document.getElementById(target);

         targetEl.classList.toggle("hidden");

         // conditional to apply active styles or not based on menu state
         const buttonStyles = ["bg-gray-200", "dark:bg-zinc-700"];
         const navStyles = ["border-b", "border-b-black/20", "dark:border-b-white/20", "shadow-lg", "bg-gray-100/70", "dark:bg-zinc-800/70"];

         if (!targetEl.classList.contains("hidden")) {
            button.classList.add(...buttonStyles);
            targetEl.closest(".navbar-container").classList.add(...navStyles);
         } else {
            button.classList.remove(...buttonStyles);
            targetEl.closest(".navbar-container").classList.remove(...navStyles);
         }
      }

      function handleBlur(el) {
         const button = el.currentTarget;

         const target = button.dataset.target;
         const targetEl = document.getElementById(target);

         console.log(targetEl.closest(".navbar-container"))
      }

      burgerMenus.forEach((menu) => {
         menu.addEventListener("click", handleClick)

         menu.addEventListener("blur", handleBlur)
      })
   });


   // /////////////////////////////////////////////////
   // WHENEVER VIEW TRANSITIONS API IS WIDELY AVAILABLE
   // /////////////////////////////////////////////////
   /* document.addEventListener('astro:page-load', () => {
   // This runs on every page load.

   // Navbar
   const burgerMenus = document.querySelectorAll(".burger");

   function handleClick(el) {
      const button = el.currentTarget;

      // make menu active
      const target = button.dataset.target;
      const targetEl = document.getElementById(target);

      targetEl.classList.toggle("hidden");

      // conditional to apply active styles or not based on menu state
      const styles = ["bg-gray-100", "dark:bg-gray-700"];

      if (!targetEl.classList.contains("hidden")) {
         button.classList.add(...styles);
      } else {
         button.classList.remove(...styles);
      }
   }

   burgerMenus.forEach((menu) => {
      menu.addEventListener("click", handleClick)
   })
   }, { once: false });
   */
</script>

<style>
   .patties::before {
      @apply top-4 left-2
   }
   
   .patties::after {
      @apply bottom-4 right-2 
   }

   .patties::after:hover {
      @apply w-6
   }

   .patties::before,
   .patties::after {
      content: "";
      @apply absolute h-[2px] transition-all w-8 bg-gray-900 dark:bg-gray-100 hover:dark:bg-white rounded-full
   }

   /* COMPATIBILITY WITH THIS CSS MODULE */
   /* BECAUSE IT BREAKS TAILWIND METHODOLOGIES */
   /* WHEN USING <html class="dark"><html/> */
   :global(.dark) .patties::before,
   :global(.dark) .patties::after {
      @apply bg-gray-100 hover:bg-white
   }
</style>