---
// Astro
import { getCollection, getEntries } from 'astro:content';

// Import SitewideConfig
import * as SitewideConfig from "../../configuration/SitewideConfig.md";

// import layout
import BaseLayout from '../../layouts/BaseLayout.astro';
import MainLayout from '../../layouts/MainLayout.astro';

// import components
import FullArtwork from '../../components/FullArtwork.astro';
import ArtDetails from '../../components/ArtDetails.astro';
import PrevNextArtwork from '../../components/PrevNextArtwork';

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {

   // import all non-draft artwork
   const artworkEntries = await getCollection('artwork', ({data}) => {
      return !data.draft;
   });
   
   return artworkEntries.map((entry) => ({
      params: { 
         art_type: entry.data.art_type,
         slug: entry.slug
      }, 
      props: { 
         entry
      },
   }));
}

// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const params = Astro.params;

// Get the previous and next entry matching the art_type
// const { prevEntry, nextEntry } = artworkEntries.sort((a, b) => {


//    return (

//    )
// })

// Get the tags as a separate collection since it is referenced from the schema
const tags = await getEntries(entry.data.tags);

// Get markdown content
const { Content } = await entry.render();
---

<BaseLayout 
   pageTitle={`${entry.data.title}`}
   ogTitle={`${entry.data.title} by ${SitewideConfig.frontmatter.site_name}`}
   ogDescription={entry.body}
   ogImage={entry.data.image.src}
   options={{
      headerShadow: false
   }}
   blurredBg={entry.data.image}
> 
   <article class="">
      <div class="w-full flex flex-col justify-between py-2 sm:flex-row md:flex-col md:px-4 md:gap-6 lg:flex-row ">
         <div class="sm:w-3/5 md:w-full lg:w-2/3">
            <FullArtwork 
               title={entry.data.title} 
               date={entry.data.date}
               artType={entry.data.art_type}
               href={`#`}
               mainImage={{
                  src: entry.data.image,
                  alt: entry.data.main_image_alt
               }}
               images={entry.data.images}
               description={entry.data.description}
               showFullDescription={true}
               loading="eager"
               classes=""
            />
         </div>
         <div class="relative px-4 prose prose-zinc prose-h1:font-medium prose-h1:mb-7 prose-a:no-underline max-w-none dark:prose-invert sm:w-2/5 md:prose-lg md:px-0 md:w-full lg:prose-base lg:w-1/3 xl:prose-lg">
            <div class="top-0 lg:sticky lg:py-4">
               <header class="mt-10 text-md sm:mt-0 md:mt-10 lg:mt-0">
                  <h1>{entry.data.title}</h1>
               </header>
               <ArtDetails date={entry.data.date} artType={entry.data.art_type} tags={tags} />
               <Content />
               <hr class="border">
               <PrevNextArtwork />
            </div>
            
         </div>
      </div>
      
   </article>
</BaseLayout>