---
// Astro
import { getCollection, type CollectionEntry } from 'astro:content';

// import layout
import BaseLayout from '../../layouts/BaseLayout.astro';
import ArtworkGridLayout from "../../layouts/ArtworkGridLayout.astro";

// import components
import SectionTitle from "../../components/SectionTitle.jsx";
import GridHeader from "../../components/GridHeader.jsx";
import GridNav from "../../components/GridNav.jsx";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {

   // create a Set of art_type's to limit params to avoid conflicting dyanamic routes
   const allArtTypes = new Set();

   // import tag collection
   const tagCollection = await getCollection('tags');

   // import all non-draft artwork
   const artworkEntries = await getCollection('artwork', ({data}) => !data.draft);

   // sort entries from latest to oldest
   const sortedEntries = artworkEntries.sort((a, b) => Date.parse(b.data.date) - Date.parse(a.data.date));

   // map over each entry to grab its art_type and add it to the Set
   sortedEntries.map((entry) => {
      entry.data.art_type && allArtTypes.add(entry.data.art_type);
   })

   // return the paths of ONLY the art_type's
   return Array.from(allArtTypes).map((artType) => {

      // filter entries by art_type from the URL param
      const entriesByArtType = sortedEntries.filter((sortedEntry) => sortedEntry.data.art_type === artType )
      
      return {
         params: { 
            art_type: artType,
         }, 
         props: { 
            entries: entriesByArtType,
            tagCollection: tagCollection
         },
      }
   });
}

// define types with typescript
type Props = {
   entries: CollectionEntry<"artwork">,
   tagCollection: CollectionEntry<"tags">
}

// 2. For your template, you can get the entry directly from the prop
const { entries, tagCollection } = Astro.props;
const params = Astro.params;
const urlPath = Astro.url.pathname;
---

<BaseLayout pageTitle={`${params.art_type}s`}>

   <section class="relative">
      <GridHeader>
         <SectionTitle 
            title={`${params.art_type}s`}
         />
         <GridNav 
            tagCollection={tagCollection} 
            urlPath={urlPath}
         >
            <input transition:persist id="expand-tags" name="Expand artwork tag navigation" type="checkbox" class="sr-only peer/checkbox">
         </GridNav>
      </GridHeader>

      <ArtworkGridLayout artwork={entries} />
   </section>
</BaseLayout>
